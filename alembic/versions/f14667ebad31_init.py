"""init

Revision ID: f14667ebad31
Revises: 
Create Date: 2025-08-10 01:28:54.872925

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f14667ebad31'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('name', sa.String(length=191), nullable=False),
    sa.Column('currency_code', sa.Text(), nullable=False),
    sa.Column('country_code', sa.Text(), nullable=False),
    sa.Column('calling_code', sa.Text(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('image_media',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('url', sa.String(length=191), nullable=False),
    sa.Column('file_name', sa.String(length=191), nullable=False),
    sa.Column('size', sa.Float(), nullable=False),
    sa.Column('meme_type', sa.String(length=191), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('original_filename', sa.String(length=500), nullable=False),
    sa.Column('s3_key', sa.String(length=500), nullable=False),
    sa.Column('file_type', sa.String(length=100), nullable=False),
    sa.Column('original_size', sa.Float(), nullable=False),
    sa.Column('compressed_size', sa.Float(), nullable=True),
    sa.Column('compression_ratio', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('subscription_name', sa.String(length=191), nullable=False),
    sa.Column('usd_amount', sa.Float(), nullable=False),
    sa.Column('bdt_amount', sa.Float(), nullable=False),
    sa.Column('subscription_plan', sa.Enum('ESSENTIAL', 'PLUS', 'ELITE', name='subscriptionplan'), nullable=False),
    sa.Column('points_per_month', sa.Integer(), nullable=False),
    sa.Column('is_addon', sa.Boolean(), nullable=False),
    sa.Column('min_points', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchased_subscription',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('subscription_id', sa.String(length=191), nullable=False),
    sa.Column('paddle_subscription_id', sa.String(length=191), nullable=True),
    sa.Column('subscription_status', sa.String(length=191), nullable=True),
    sa.Column('next_billing_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('first_name', sa.String(length=191), nullable=False),
    sa.Column('last_name', sa.String(length=191), nullable=False),
    sa.Column('password', sa.String(length=191), nullable=True),
    sa.Column('email', sa.String(length=191), nullable=False),
    sa.Column('account_provider', sa.Enum('EMAIL', 'GOOGLE', name='accountprovider'), nullable=True),
    sa.Column('account_type', sa.Enum('SUPER_ADMIN', 'ADMIN', 'USER', name='useraccounttype'), nullable=False),
    sa.Column('photo_url', sa.String(length=191), nullable=True),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('profession_title', sa.Text(), nullable=True),
    sa.Column('primary_city', sa.Text(), nullable=True),
    sa.Column('primary_state', sa.Text(), nullable=True),
    sa.Column('primary_address', sa.Text(), nullable=True),
    sa.Column('about_description', sa.Text(), nullable=True),
    sa.Column('phone_number', sa.Text(), nullable=True),
    sa.Column('zip_code', sa.Text(), nullable=True),
    sa.Column('reset_password_pin', sa.Integer(), nullable=True),
    sa.Column('reset_password_expire_date', sa.DateTime(), nullable=True),
    sa.Column('verify_pin', sa.Integer(), nullable=True),
    sa.Column('verify_pin_expire_date', sa.DateTime(), nullable=True),
    sa.Column('verify_status', sa.Boolean(), nullable=False),
    sa.Column('current_points', sa.Integer(), nullable=False),
    sa.Column('total_points_earned', sa.Integer(), nullable=False),
    sa.Column('total_points_used', sa.Integer(), nullable=False),
    sa.Column('purchased_subscription_id', sa.String(length=191), nullable=True),
    sa.Column('country_id', sa.String(length=191), nullable=True),
    sa.Column('super_admin', sa.Boolean(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['purchased_subscription_id'], ['purchased_subscription.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('billing_log',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('user_id', sa.String(length=191), nullable=False),
    sa.Column('subscription_id', sa.String(length=191), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('paddle_transaction_id', sa.String(length=191), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('points_added', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_material',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('user_id', sa.String(length=191), nullable=False),
    sa.Column('file_id', sa.String(length=191), nullable=False),
    sa.Column('analysis_response', sa.JSON(), nullable=True),
    sa.Column('question_type', sa.String(length=50), nullable=True),
    sa.Column('detected_language', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('summary_title', sa.String(length=500), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=False),
    sa.Column('points_cost', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['media.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('point_transaction',
    sa.Column('id', sa.String(length=191), nullable=False),
    sa.Column('user_id', sa.String(length=191), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('doc_material_id', sa.String(length=191), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doc_material_id'], ['doc_material.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('point_transaction')
    op.drop_table('doc_material')
    op.drop_table('billing_log')
    op.drop_table('user')
    op.drop_table('purchased_subscription')
    op.drop_table('subscriptions')
    op.drop_table('media')
    op.drop_table('image_media')
    op.drop_table('country')
    # ### end Alembic commands ###
