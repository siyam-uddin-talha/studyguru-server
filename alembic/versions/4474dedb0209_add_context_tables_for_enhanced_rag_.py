"""Add context tables for enhanced RAG system

Revision ID: 4474dedb0209
Revises: 53b9d94b22f9
Create Date: 2025-10-13 10:53:33.698442

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4474dedb0209"
down_revision: Union[str, Sequence[str], None] = "53b9d94b22f9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_learning_profile",
        sa.Column("id", sa.String(length=191), nullable=False),
        sa.Column("user_id", sa.String(length=191), nullable=False),
        sa.Column("preferred_topics", sa.JSON(), nullable=True),
        sa.Column("learning_style", sa.String(length=50), nullable=True),
        sa.Column("difficulty_preference", sa.String(length=20), nullable=True),
        sa.Column("mastered_concepts", sa.JSON(), nullable=True),
        sa.Column("struggling_areas", sa.JSON(), nullable=True),
        sa.Column("learning_gaps", sa.JSON(), nullable=True),
        sa.Column("average_session_length", sa.Float(), nullable=True),
        sa.Column("preferred_question_types", sa.JSON(), nullable=True),
        sa.Column("most_productive_times", sa.JSON(), nullable=True),
        sa.Column("related_interactions", sa.JSON(), nullable=True),
        sa.Column("topic_clusters", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_activity", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        "idx_learning_profile_activity",
        "user_learning_profile",
        ["last_activity"],
        unique=False,
    )
    op.create_index(
        "idx_learning_profile_user", "user_learning_profile", ["user_id"], unique=False
    )
    op.create_table(
        "conversation_context",
        sa.Column("id", sa.String(length=191), nullable=False),
        sa.Column("interaction_id", sa.String(length=191), nullable=False),
        sa.Column("user_id", sa.String(length=191), nullable=False),
        sa.Column("context_type", sa.String(length=50), nullable=False),
        sa.Column("context_data", sa.JSON(), nullable=False),
        sa.Column("context_hash", sa.String(length=64), nullable=False),
        sa.Column("relevance_score", sa.Float(), nullable=True),
        sa.Column("recency_score", sa.Float(), nullable=True),
        sa.Column("importance_score", sa.Float(), nullable=True),
        sa.Column("content_length", sa.Integer(), nullable=True),
        sa.Column("topic_tags", sa.JSON(), nullable=True),
        sa.Column("question_numbers", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["interaction_id"],
            ["interaction.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_context_created", "conversation_context", ["created_at"], unique=False
    )
    op.create_index(
        "idx_context_relevance",
        "conversation_context",
        ["relevance_score", "recency_score"],
        unique=False,
    )
    op.create_index(
        "idx_context_type_hash",
        "conversation_context",
        ["context_type", "context_hash"],
        unique=False,
    )
    op.create_index(
        "idx_context_user_interaction",
        "conversation_context",
        ["user_id", "interaction_id"],
        unique=False,
    )
    op.create_table(
        "document_context",
        sa.Column("id", sa.String(length=191), nullable=False),
        sa.Column("media_id", sa.String(length=191), nullable=False),
        sa.Column("interaction_id", sa.String(length=191), nullable=False),
        sa.Column("user_id", sa.String(length=191), nullable=False),
        sa.Column("document_type", sa.String(length=50), nullable=False),
        sa.Column("total_questions", sa.Integer(), nullable=True),
        sa.Column("question_structure", sa.JSON(), nullable=True),
        sa.Column("main_topics", sa.JSON(), nullable=True),
        sa.Column("difficulty_level", sa.String(length=20), nullable=True),
        sa.Column("subject_area", sa.String(length=100), nullable=True),
        sa.Column("question_mapping", sa.JSON(), nullable=True),
        sa.Column("answer_key", sa.JSON(), nullable=True),
        sa.Column("full_content", sa.Text(), nullable=True),
        sa.Column("content_summary", sa.Text(), nullable=True),
        sa.Column("key_concepts", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["interaction_id"],
            ["interaction.id"],
        ),
        sa.ForeignKeyConstraint(
            ["media_id"],
            ["media.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_document_interaction", "document_context", ["interaction_id"], unique=False
    )
    op.create_index(
        "idx_document_media", "document_context", ["media_id"], unique=False
    )
    # Note: JSON columns cannot be directly indexed in MySQL, skipping idx_document_topics
    op.create_index(
        "idx_document_type", "document_context", ["document_type"], unique=False
    )
    op.create_index("idx_document_user", "document_context", ["user_id"], unique=False)
    op.create_table(
        "context_usage_log",
        sa.Column("id", sa.String(length=191), nullable=False),
        sa.Column("interaction_id", sa.String(length=191), nullable=False),
        sa.Column("user_id", sa.String(length=191), nullable=False),
        sa.Column("conversation_id", sa.String(length=191), nullable=True),
        sa.Column("context_sources_used", sa.JSON(), nullable=False),
        sa.Column("context_sources_ignored", sa.JSON(), nullable=True),
        sa.Column("context_retrieval_time", sa.Float(), nullable=True),
        sa.Column("context_processing_time", sa.Float(), nullable=True),
        sa.Column("context_relevance_score", sa.Float(), nullable=True),
        sa.Column("user_satisfaction_score", sa.Float(), nullable=True),
        sa.Column("context_utilization_rate", sa.Float(), nullable=True),
        sa.Column("user_query", sa.Text(), nullable=True),
        sa.Column("query_type", sa.String(length=50), nullable=True),
        sa.Column("response_quality", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversation.id"],
        ),
        sa.ForeignKeyConstraint(
            ["interaction_id"],
            ["interaction.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_usage_log_created", "context_usage_log", ["created_at"], unique=False
    )
    op.create_index(
        "idx_usage_log_interaction",
        "context_usage_log",
        ["interaction_id"],
        unique=False,
    )
    op.create_index(
        "idx_usage_log_quality", "context_usage_log", ["response_quality"], unique=False
    )
    op.create_index(
        "idx_usage_log_user", "context_usage_log", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_usage_log_user", table_name="context_usage_log")
    op.drop_index("idx_usage_log_quality", table_name="context_usage_log")
    op.drop_index("idx_usage_log_interaction", table_name="context_usage_log")
    op.drop_index("idx_usage_log_created", table_name="context_usage_log")
    op.drop_table("context_usage_log")
    op.drop_index("idx_document_user", table_name="document_context")
    op.drop_index("idx_document_type", table_name="document_context")
    # Note: idx_document_topics was not created due to JSON indexing limitations
    op.drop_index("idx_document_media", table_name="document_context")
    op.drop_index("idx_document_interaction", table_name="document_context")
    op.drop_table("document_context")
    op.drop_index("idx_context_user_interaction", table_name="conversation_context")
    op.drop_index("idx_context_type_hash", table_name="conversation_context")
    op.drop_index("idx_context_relevance", table_name="conversation_context")
    op.drop_index("idx_context_created", table_name="conversation_context")
    op.drop_table("conversation_context")
    op.drop_index("idx_learning_profile_user", table_name="user_learning_profile")
    op.drop_index("idx_learning_profile_activity", table_name="user_learning_profile")
    op.drop_table("user_learning_profile")
    # ### end Alembic commands ###
